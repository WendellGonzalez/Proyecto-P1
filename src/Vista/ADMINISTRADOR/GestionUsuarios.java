/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista.ADMINISTRADOR;

import DAO.UsuarioDAO;
import DAOImpl.UsuarioDAOimpl;
import Model.Administrador;
import Model.Usuario;
import javax.swing.table.DefaultTableModel;
import Model.UsuarioGeneral;
import Vista.LOGIN;
import java.awt.Font;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author wendellgonzalez
 */
public class GestionUsuarios extends javax.swing.JFrame {

    private List<Usuario> listaUsuario = new ArrayList<>();
    DefaultTableModel mt = new DefaultTableModel();
    private Administrador administrador;

    /**
     * Creates new form GestionMedicos
     * @param administrador
     */
    public GestionUsuarios(Administrador administrador) {
        this.administrador = administrador;
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("ADMINISTRADOR: " + administrador.getNombre());
        contadorDeUsuarios();

        cargarTabla("");

        activiarBotonesEdicion(false);
        habilitarCampos(false);

        jMenuBar1.remove(jMenu1);
        jMenuBar1.remove(jMenu2);

        jMenuOpciones = new javax.swing.JMenu("MENÚ");
        itemCerrarSesion = new javax.swing.JMenuItem("Cerrar sesión");
        itemVolver = new javax.swing.JMenuItem("Volver al módulo anterior");
        itemSalir = new javax.swing.JMenuItem("Salir del sistema");

        jMenuOpciones.add(itemCerrarSesion);
        jMenuOpciones.add(itemVolver);
        jMenuOpciones.addSeparator();
        jMenuOpciones.add(itemSalir);

        jMenuOpciones.setFont(new Font("Helvetica Neue", Font.BOLD, 13));

        // Agregar menu al menu par
        jMenuBar1.add(jMenuOpciones);
        setJMenuBar(jMenuBar1);

        //Acciones del menu
        itemCerrarSesion.addActionListener(e -> {
            this.dispose();
            new LOGIN().setVisible(true);
        });

        itemVolver.addActionListener(e -> {
            this.dispose();
            new AdminRol(this.administrador).setVisible(true);
        });

        itemSalir.addActionListener(e -> {
            int resp = JOptionPane.showConfirmDialog(this, "¿Deseas salir del sistema?", "Confirmar salida", JOptionPane.YES_NO_OPTION);
            if (resp == JOptionPane.YES_OPTION) {
                System.exit(0);
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtid = new javax.swing.JTextField();
        txtNombreCompleto = new javax.swing.JTextField();
        txtdireccion = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        txtTotalUsuarios = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GESTION DE USUARIOS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 18))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INGRESE LA SIGUIENTE INFORMACION", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        txtid.setEditable(false);
        txtid.setBorder(javax.swing.BorderFactory.createTitledBorder("ID"));

        txtNombreCompleto.setBorder(javax.swing.BorderFactory.createTitledBorder("NOMBRE Y APELLIDO"));

        txtdireccion.setToolTipText("");
        txtdireccion.setBorder(javax.swing.BorderFactory.createTitledBorder("DIRECCION"));

        txtemail.setBorder(javax.swing.BorderFactory.createTitledBorder("EMAIL"));

        txtTelefono.setBorder(javax.swing.BorderFactory.createTitledBorder("TELEFONO"));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/delete.png"))); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/cancel.png"))); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/edite.png"))); // NOI18N
        btnEditar.setText(" EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/update.png"))); // NOI18N
        btnActualizar.setText(" ACTUALIZAR");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtemail, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtdireccion)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombreCompleto)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(99, 99, 99))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtid, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                    .addComponent(txtNombreCompleto))
                .addGap(18, 18, 18)
                .addComponent(txtdireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 51, 51));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LISTADO DE USUARIOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre Completo", "Tipo de Usuario", "Dirección", "Email", "Telefono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaUsuarios);

        txtBuscar.setToolTipText("Buscar usuarios por nombres o apellidos");
        txtBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar"));
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        txtTotalUsuarios.setEditable(false);
        txtTotalUsuarios.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtTotalUsuarios.setForeground(new java.awt.Color(0, 102, 102));
        txtTotalUsuarios.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalUsuarios.setBorder(javax.swing.BorderFactory.createTitledBorder("Total de Usuarios"));
        txtTotalUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalUsuariosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 911, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtBuscar)
                        .addGap(18, 18, 18)
                        .addComponent(txtTotalUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jMenuBar1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "-", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 2, 13), new java.awt.Color(204, 204, 204))); // NOI18N
        jMenuBar1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N

        jMenu1.setText("MENÚ");
        jMenuBar1.add(jMenu1);
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        String texto = txtBuscar.getText();
        cargarTabla(texto);
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
        cargarTabla(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        funcionEditar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        funcionActualizar();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        funcionEliminar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:

        LimpiarCampos();
        habilitarCampos(false);
        activiarBotonesEdicion(false);
        txtTelefono.setEnabled(false);
        tablaUsuarios.clearSelection();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void tablaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaUsuariosMouseClicked
        // TODO add your handling code here:
        seleccionFila();
    }//GEN-LAST:event_tablaUsuariosMouseClicked

    private void txtTotalUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalUsuariosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalUsuariosActionPerformed

    // Metodo mouseClicked
    private void seleccionFila() {
        int fila = tablaUsuarios.getSelectedRow();
        if (fila >= 0) {
            Usuario u = listaUsuario.get(fila);

            txtid.setText(String.valueOf(u.getIdUsuario()));
            txtNombreCompleto.setText(u.getNombre());
            txtdireccion.setText(u.getDireccion());
            txtemail.setText(u.getEmail());
            txtTelefono.setText(u.getTelefono());
        }

        activiarBotonesEdicion(false);
        btnEditar.setEnabled(true);
        btnEliminar.setEnabled(true);
        habilitarCampos(false);
    }
    
    // Metodo editar
    private void funcionEditar() {
        int fila = tablaUsuarios.getSelectedRow();
        if (fila >= 0) {
            Usuario u = listaUsuario.get(fila);

            txtid.setText(String.valueOf(u.getIdUsuario()));
            txtNombreCompleto.setText(u.getNombre());
            txtdireccion.setText(u.getDireccion());
            txtemail.setText(u.getEmail());
            txtTelefono.setText(u.getTelefono());

            habilitarCampos(true);
            btnActualizar.setEnabled(true);
            btnCancelar.setEnabled(true);
            btnEditar.setEnabled(false);
            btnEliminar.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una fila para editar.");
        }
    }

    // Metodo Actualizar
    private void funcionActualizar() {
        if (txtid.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Seleccione un usuario.");
            return;
        }

        int fila = tablaUsuarios.getSelectedRow();
        String tipo = tablaUsuarios.getValueAt(fila, 2).toString();

        Usuario u = new UsuarioGeneral(
                Integer.parseInt(txtid.getText()),
                txtNombreCompleto.getText(),
                txtdireccion.getText(),
                txtemail.getText(),
                txtTelefono.getText()
        );

        String tipoTexto = tablaUsuarios.getValueAt(tablaUsuarios.getSelectedRow(), 2).toString().toUpperCase();

        Usuario.TipoUsuario tipo1 = Usuario.TipoUsuario.fromStringSafe(tipoTexto);

        if (tipo == null) {
            JOptionPane.showMessageDialog(this, "Tipo de usuario invalido: " + tipoTexto);
            return;
        }

        u.setTipoUsuario(tipo1);

        UsuarioDAO dao = new UsuarioDAOimpl();
        if (dao.actualizar(u)) {
            JOptionPane.showMessageDialog(this, "Usuario actualizado");
            cargarTabla("");
            LimpiarCampos();
            habilitarCampos(false);
            activiarBotonesEdicion(false);
        } else {
            JOptionPane.showMessageDialog(this, "Error al actualizar.");
        }
    }

    // Metodo eliminar
    private void funcionEliminar() {
        int fila = tablaUsuarios.getSelectedRow();
        if (fila >= 0) {
            int confirmar = JOptionPane.showConfirmDialog(this, "¿Eliminar este usuario?", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (confirmar == JOptionPane.YES_OPTION) {
                int id = Integer.parseInt(tablaUsuarios.getValueAt(fila, 0).toString());
                UsuarioDAO dao = new UsuarioDAOimpl();
                if (dao.eliminar(id)) {
                    JOptionPane.showMessageDialog(this, "Usuario eliminado.");
                    txtTotalUsuarios.setText(String.valueOf(dao.contarUsuarios()));
                    cargarTabla("");
                    LimpiarCampos();
                }
            }
        }
    }

    //Metodo para cargar tabla con todos los usuarios
    private void cargarTabla(String filtro) {
        UsuarioDAO dao = new UsuarioDAOimpl();
        listaUsuario = dao.listarUsuario(filtro);

        DefaultTableModel modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        modelo.addColumn("ID");
        modelo.addColumn("Nombre Completo");
        modelo.addColumn("Tipo de Usuario");
        modelo.addColumn("Edad");
        modelo.addColumn("Direccion");
        modelo.addColumn("Email");
        modelo.addColumn("Telefono");

        for (Usuario u : listaUsuario) {
            Object[] fila = {
                u.getIdUsuario(),
                u.getNombre(),
                u.getTipoUsuario().name(),
                u.getEdad(),
                u.getDireccion(),
                u.getEmail(),
                u.getTelefono(),};
            modelo.addRow(fila);
        }

        tablaUsuarios.setModel(modelo);

        try {
            tablaUsuarios.getColumnModel().getColumn(0).setMinWidth(0);
            tablaUsuarios.getColumnModel().getColumn(0).setMaxWidth(0);
            tablaUsuarios.getColumnModel().getColumn(0).setWidth(0);
        } catch (Exception e) {
            System.out.println("Error al ocultar columna ID: " + e.getMessage());
        }

    }

    private void activiarBotonesEdicion(boolean estado) {
        btnEditar.setEnabled(estado);
        btnEliminar.setEnabled(estado);
        btnActualizar.setEnabled(estado);
        btnCancelar.setEnabled(estado);
    }

    private void habilitarCampos(boolean estado) {
        txtNombreCompleto.setEnabled(estado);
        txtdireccion.setEnabled(estado);
        txtemail.setEnabled(estado);
        txtTelefono.setEnabled(estado);
        txtid.setEnabled(estado);
    }

    private void LimpiarCampos() {
        txtid.setText("");
        txtNombreCompleto.setText("");
        txtdireccion.setText("");
        txtemail.setText("");
        txtTelefono.setText("");
        txtNombreCompleto.requestFocus();
    }

    // Configuracion del MenuBar
    private javax.swing.JMenu jMenuOpciones;
    private javax.swing.JMenuItem itemCerrarSesion;
    private javax.swing.JMenuItem itemVolver;
    private javax.swing.JMenuItem itemSalir;

    //Contador de usuarios
    private void contadorDeUsuarios() {
        UsuarioDAO dao = new UsuarioDAOimpl();
        int totalUsuarios = dao.contarUsuarios();
        txtTotalUsuarios.setText(String.valueOf(totalUsuarios));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtNombreCompleto;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTotalUsuarios;
    private javax.swing.JTextField txtdireccion;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista.ADMINISTRADOR;

import Vista.ADMINISTRADOR.ADMINGestiones;
import DAO.EspecialidadDAO;
import DAOImpl.EspecialidadDAOImpl;
import Model.Administrador;
import Model.Especialidad;
import Vista.LoginORSignIn;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.*;

/**
 *
 * @author wendellgonzalez
 */
public class GestionEspecialidades extends javax.swing.JFrame {

    private EspecialidadDAO especialidadDAO = new EspecialidadDAOImpl();
    private DefaultTableModel modelo;
    private List<Especialidad> listaEspecialidad = new ArrayList<>();
    private int idEspecialidadSeleccionada = -1;
    private Administrador administrador;

    /**
     * Creates new form GestionEspecialidades
     */
    public GestionEspecialidades(Administrador administrador) {
        this.administrador = administrador;
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);

        modelo = (DefaultTableModel) tablaEspecialidades.getModel();
        cargarEspecialidadesEnTabla(especialidadDAO.obtenerTodas());
        contadorDeEspecialidades();
        setTitle("ADMINISTRADOR: " + administrador.getNombre());

        String ids[] = {"ID", "NOMBRE", "DESCRIPCION"};
        modelo.setColumnIdentifiers(ids);
        tablaEspecialidades.setModel(modelo);

        activiarBotonesEdicion(false);
        btnAgregar.setEnabled(true);
        btnCancelar.setEnabled(false);
        habilitarCampos(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        txtNombreEspecialidad = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        txtBuscar = new javax.swing.JTextField();
        txtTotalEspecialidades = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaEspecialidades = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GESTION DE ESPECIALIDADES", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 18))); // NOI18N

        jPanel8.setBackground(new java.awt.Color(0, 102, 102));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INGRESE LA SIGUIENTE INFORMACION", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel8MouseClicked(evt);
            }
        });

        txtNombreEspecialidad.setBorder(javax.swing.BorderFactory.createTitledBorder("NOMBRE DE ESPECIALIDAD"));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/delete.png"))); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/cancel.png"))); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/edit.png"))); // NOI18N
        btnEditar.setText(" EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/update.png"))); // NOI18N
        btnActualizar.setText(" ACTUALIZAR");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/add.png"))); // NOI18N
        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        txtDescripcion.setBorder(javax.swing.BorderFactory.createTitledBorder("DESCRIPCION ESPECIALIDAD"));
        jScrollPane2.setViewportView(txtDescripcion);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(99, 99, 99))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(txtNombreEspecialidad))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(txtNombreEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        jPanel9.setBackground(new java.awt.Color(0, 51, 51));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LISTADO DE ESPECIALIDADES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel9MouseClicked(evt);
            }
        });

        txtBuscar.setToolTipText("Buscar usuarios por nombres o apellidos");
        txtBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "BUSCAR ESPECIALIDADES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 13), new java.awt.Color(0, 102, 102))); // NOI18N
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        txtTotalEspecialidades.setEditable(false);
        txtTotalEspecialidades.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtTotalEspecialidades.setForeground(new java.awt.Color(0, 102, 102));
        txtTotalEspecialidades.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalEspecialidades.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TOTAL DE ESPECIALIDADES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 13), new java.awt.Color(0, 102, 102))); // NOI18N

        tablaEspecialidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaEspecialidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaEspecialidadesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaEspecialidades);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTotalEspecialidades, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalEspecialidades, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jMenuBar1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "-", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 2, 13), new java.awt.Color(204, 204, 204))); // NOI18N
        jMenuBar1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N

        jMenu1.setText("MENÚ");

        jMenu1.setFont(new java.awt.Font("Helvetica Neue", java.awt.Font.BOLD, 13));

        JMenuItem itemVolver = new JMenuItem("Volver al módulo anterior");
        JMenuItem itemSalir = new JMenuItem("Salir del sistema");
        JMenuItem itemCerrarSesion = new JMenuItem("Cerrar sesion");

        itemVolver.addActionListener(e -> {
            this.dispose();
            new ADMINGestiones(this.administrador).setVisible(true);
        });

        itemCerrarSesion.addActionListener(e -> {
            this.dispose();
            new LoginORSignIn().setVisible(true);
        });

        itemSalir.addActionListener(e -> {
            int resp = JOptionPane.showConfirmDialog(this, "¿Deseas salir del sistema?", "Confirmar Salida", JOptionPane.YES_NO_OPTION);
            if(resp == JOptionPane.YES_OPTION) {
                System.exit(0);
            }
        });

        jMenu1.add(itemCerrarSesion);
        jMenu1.add(itemVolver);
        jMenu1.addSeparator();
        jMenu1.add(itemSalir);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        eliminarEspecialidad();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
        habilitarCampos(false);
        activiarBotonesEdicion(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        editarEspecialidad();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        actualizarEspecialidad();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        agregarEspecialidad();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void tablaEspecialidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEspecialidadesMouseClicked
        // TODO add your handling code here:
        int fila = tablaEspecialidades.getSelectedRow();
        if (fila >= 0) {
            Especialidad e = listaEspecialidad.get(fila);

            txtNombreEspecialidad.setText(e.getNombre());
            txtDescripcion.setText(e.getDescripcion());
        }

        activiarBotonesEdicion(false);
        btnEditar.setEnabled(true);
        btnEliminar.setEnabled(true);
        habilitarCampos(false);
        
        

    }//GEN-LAST:event_tablaEspecialidadesMouseClicked

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        // TODO add your handling code here:
        filtrarEspecialidades(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void jPanel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseClicked
        // TODO add your handling code here:
        activiarBotonesEdicion(false);
        btnAgregar.setEnabled(true);
        btnCancelar.setEnabled(false);
        habilitarCampos(true);
        limpiarCampos();
    }//GEN-LAST:event_jPanel9MouseClicked

    private void jPanel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseClicked
        // TODO add your handling code here:
        activiarBotonesEdicion(false);
        btnAgregar.setEnabled(true);
        btnCancelar.setEnabled(false);
        habilitarCampos(true);
        limpiarCampos();
    }//GEN-LAST:event_jPanel8MouseClicked

    // Metodo agregar Especialidad
    private void agregarEspecialidad() {
        String nombre = txtNombreEspecialidad.getText().trim();
        String descripcion = txtDescripcion.getText().trim();

        if (nombre.isEmpty() || descripcion.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debes completar todos los campos.");
            return;
        }

        EspecialidadDAO dao = new EspecialidadDAOImpl();
        dao.insertar(nombre, descripcion);

        JOptionPane.showMessageDialog(this, "Especialidad registrada correctamente.");
        txtTotalEspecialidades.setText(String.valueOf(especialidadDAO.contarEspecialidades()));

        cargarEspecialidadesEnTabla(dao.obtenerTodas());
        limpiarCampos();
    }

    // Metodo actualizar Especialidad
    private void actualizarEspecialidad() {
        if (txtNombreEspecialidad.getText().trim().isEmpty() || txtDescripcion.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe completar todos los campos.");
            return;
        }

        if (idEspecialidadSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una especialidad para actualizar.");
            return;
        }

        String nombre = txtNombreEspecialidad.getText().trim();
        String descripcion = txtDescripcion.getText().trim();

        Especialidad especialidad = new Especialidad(idEspecialidadSeleccionada, nombre, descripcion);
        EspecialidadDAO dao = new EspecialidadDAOImpl();

        if (dao.actualizar(especialidad)) {
            JOptionPane.showMessageDialog(this, "Especialidad actualizada correctamente.");
            cargarEspecialidadesEnTabla(dao.obtenerTodas());
            limpiarCampos();

            btnEditar.setEnabled(false);
            btnAgregar.setEnabled(true);
            btnActualizar.setEnabled(false);

            idEspecialidadSeleccionada = -1;
        } else {
            JOptionPane.showMessageDialog(this, "Error al actualizar la especialidad.");
        }
    }

    // Metodo editar Especialidad
    private void editarEspecialidad() {
        int fila = tablaEspecialidades.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una especialidad.");
            return;
        }

        idEspecialidadSeleccionada = (int) tablaEspecialidades.getValueAt(fila, 0);
        String nombre = tablaEspecialidades.getValueAt(fila, 1).toString();
        String descripcion = tablaEspecialidades.getValueAt(fila, 2).toString();

        txtNombreEspecialidad.setText(nombre);
        txtDescripcion.setText(descripcion);

        habilitarCampos(true);
        activiarBotonesEdicion(true);
    }

    //Metodo de eliminar especialidad
    private void eliminarEspecialidad() {
        int fila = tablaEspecialidades.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona una especialidad");
            return;
        }

        int id = (int) tablaEspecialidades.getValueAt(fila, 0);
        if (especialidadDAO.eliminar(id)) {
            JOptionPane.showMessageDialog(this, "Especialidad eliminada correctamente.");
            txtTotalEspecialidades.setText(String.valueOf(especialidadDAO.contarEspecialidades()));
        }
        cargarEspecialidadesEnTabla(especialidadDAO.obtenerTodas());
    }

    // Metodo para cargar Tabla
    private void cargarEspecialidadesEnTabla(List<Especialidad> lista) {

        modelo = (DefaultTableModel) tablaEspecialidades.getModel();
        modelo.setRowCount(0);

        listaEspecialidad = lista;

        for (Especialidad esp : lista) {
            modelo.addRow(new Object[]{
                esp.getIdEspecialidad(),
                esp.getNombre(),
                esp.getDescripcion()});
        }
    }
    

    private void filtrarEspecialidades(String texto) {
        EspecialidadDAO dao = new EspecialidadDAOImpl();
        List<Especialidad> lista = dao.obtenerTodas();

        DefaultTableModel modelo = (DefaultTableModel) tablaEspecialidades.getModel();
        modelo.setRowCount(0);

        for (Especialidad esp : lista) {
            if (esp.getNombre().toLowerCase().contains(texto.toLowerCase())
                    || esp.getDescripcion().toLowerCase().contains(texto.toLowerCase())) {
                modelo.addRow(new Object[]{
                    esp.getIdEspecialidad(),
                    esp.getNombre(),
                    esp.getDescripcion()
                });
            }
        }
    }

    private void activiarBotonesEdicion(boolean estado) {
        btnEditar.setEnabled(estado);
        btnEliminar.setEnabled(estado);
        btnActualizar.setEnabled(estado);
        btnCancelar.setEnabled(estado);
        btnAgregar.setEnabled(estado);
    }

    private void habilitarCampos(boolean estado) {
        txtNombreEspecialidad.setEnabled(estado);
        txtDescripcion.setEnabled(estado);
    }

    private void limpiarCampos() {
        txtNombreEspecialidad.setText("");
        txtDescripcion.setText("");
    }

    private void contadorDeEspecialidades() {
        EspecialidadDAO dao = new EspecialidadDAOImpl();
        int totalEspecialidades = dao.contarEspecialidades();
        txtTotalEspecialidades.setText(String.valueOf(totalEspecialidades));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tablaEspecialidades;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtNombreEspecialidad;
    private javax.swing.JTextField txtTotalEspecialidades;
    // End of variables declaration//GEN-END:variables
}

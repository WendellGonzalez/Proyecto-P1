/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista.ADMINISTRADOR;

import DAO.UsuarioDAO;
import DAOImpl.UsuarioDAOimpl;
import Model.Administrador;
import Model.Paciente;
import Model.Usuario;
import Vista.LOGIN;
import java.awt.Font;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author wendellgonzalez
 */
public class GestionPacientes extends javax.swing.JFrame {

    private List<Usuario> listaUsuario = new ArrayList<>();
    DefaultTableModel mt = new DefaultTableModel();
    private Administrador administrador;
    
    private List<Usuario> listaPacientes = new ArrayList<>();

    public GestionPacientes(Administrador administrador) {
        this.administrador = administrador;
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("ADMINISTRADOR: " + administrador.getNombre());
        contarPacientes();

        cargarTabla("");

        activiarBotonesEdicion(false);
        habilitarCampos(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtid = new javax.swing.JTextField();
        txtNombrePaciente = new javax.swing.JTextField();
        txtDireccionPaciente = new javax.swing.JTextField();
        txtEmailPaciente = new javax.swing.JTextField();
        txtTelefonoPaciente = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabledatos = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        txtTotalPacientes = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GESTION DE PACIENTES", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 18))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INGRESE LA SIGUIENTE INFORMACION", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        txtid.setEditable(false);
        txtid.setBorder(javax.swing.BorderFactory.createTitledBorder("ID"));

        txtNombrePaciente.setBorder(javax.swing.BorderFactory.createTitledBorder("NOMBRE Y APELLIDO"));

        txtDireccionPaciente.setToolTipText("");
        txtDireccionPaciente.setBorder(javax.swing.BorderFactory.createTitledBorder("DIRECCION"));

        txtEmailPaciente.setBorder(javax.swing.BorderFactory.createTitledBorder("EMAIL"));

        txtTelefonoPaciente.setBorder(javax.swing.BorderFactory.createTitledBorder("TELEFONO"));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/delete.png"))); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/cancel.png"))); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/edite.png"))); // NOI18N
        btnEditar.setText(" EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/update.png"))); // NOI18N
        btnActualizar.setText(" ACTUALIZAR");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelefonoPaciente, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtEmailPaciente, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDireccionPaciente)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombrePaciente)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(99, 99, 99))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtid, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                    .addComponent(txtNombrePaciente))
                .addGap(18, 18, 18)
                .addComponent(txtDireccionPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtEmailPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtTelefonoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 51, 51));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LISTADO DE PACIENTES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        jTabledatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre Completo", "Tipo de Usuario", "Dirección", "Email", "Telefono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTabledatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabledatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabledatos);

        txtBuscar.setToolTipText("Buscar usuarios por nombres o apellidos");
        txtBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar"));
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        txtTotalPacientes.setEditable(false);
        txtTotalPacientes.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtTotalPacientes.setForeground(new java.awt.Color(0, 102, 102));
        txtTotalPacientes.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalPacientes.setBorder(javax.swing.BorderFactory.createTitledBorder("Total de Pacientes"));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 911, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtBuscar)
                        .addGap(18, 18, 18)
                        .addComponent(txtTotalPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jMenuBar1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "-", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 2, 13), new java.awt.Color(204, 204, 204))); // NOI18N
        jMenuBar1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N

        jMenu1.setText("MENÚ");

        JMenuItem itemCerrarSesion = new JMenuItem("Cerrar sesión");
        JMenuItem itemVolver = new JMenuItem("Volver al módulo anterior");
        JMenuItem itemSalir = new JMenuItem("Salir del sistema");

        // Agregarlos al menu
        jMenu1.add(itemCerrarSesion);
        jMenu1.add(itemVolver);
        jMenu1.addSeparator();
        jMenu1.add(itemSalir);

        itemCerrarSesion.addActionListener(e -> {
            this.dispose();
            new LOGIN().setVisible(true);
        });

        itemVolver.addActionListener(e -> {
            this.dispose();
            new AdminRol(this.administrador).setVisible(true);
        });

        itemSalir.addActionListener(e -> {
            int resp = JOptionPane.showConfirmDialog(this, "¿Deseas salir del sistema?", "Confirmar salida", JOptionPane.YES_NO_OPTION);
            if (resp == JOptionPane.YES_OPTION) {
                System.exit(0);
            }
        });

        jMenu1.setFont(new Font("Helvetica Neue", Font.BOLD, 13));

        jMenuBar1.add(jMenu1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        eliminarPaciente();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:

        LimpiarCampos();
        habilitarCampos(false);
        activiarBotonesEdicion(false);
        jTabledatos.clearSelection();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        editarPaciente();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        actualizarPaciente();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void jTabledatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabledatosMouseClicked
        // TODO add your handling code here:

        int fila = jTabledatos.getSelectedRow();
        if (fila >= 0) {
            Usuario p = listaPacientes.get(fila);

            txtid.setText(String.valueOf(p.getIdUsuario()));
            txtNombrePaciente.setText(p.getNombre());
            txtDireccionPaciente.setText(p.getDireccion());
            txtEmailPaciente.setText(p.getEmail());
            txtTelefonoPaciente.setText(p.getTelefono());
        }

        activiarBotonesEdicion(false);
        btnEditar.setEnabled(true);
        btnEliminar.setEnabled(true);
        habilitarCampos(false);
    }//GEN-LAST:event_jTabledatosMouseClicked

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
        cargarTabla(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        String texto = txtBuscar.getText();
        cargarTabla(texto);
    }//GEN-LAST:event_txtBuscarKeyReleased

    
    //Metodo eliminar Paciente
    private void eliminarPaciente() {
        int fila = jTabledatos.getSelectedRow();
        if (fila >= 0) {
            int confirmar = JOptionPane.showConfirmDialog(this, "¿Eliminar este usuario?", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (confirmar == JOptionPane.YES_OPTION) {
                int id = Integer.parseInt(jTabledatos.getValueAt(fila, 0).toString());
                UsuarioDAO dao = new UsuarioDAOimpl();
                if (dao.eliminar(id)) {
                    JOptionPane.showMessageDialog(this, "Usuario eliminado.");
                    txtTotalPacientes.setText(String.valueOf(dao.contarPacientes()));
                    cargarTabla("");
                    LimpiarCampos();
                }
            }
        }
    }
    
    // Metodo actualizar paciente
    private void actualizarPaciente() {
        if (txtid.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Seleccione un usuario.");
            return;
        }

        int fila = jTabledatos.getSelectedRow();
        String tipo = jTabledatos.getValueAt(fila, 2).toString();

        Paciente p = new Paciente(
                Integer.parseInt(txtid.getText()),
                txtNombrePaciente.getText(),
                txtDireccionPaciente.getText(),
                txtEmailPaciente.getText(),
                txtTelefonoPaciente.getText()
        );

        String tipoTexto = jTabledatos.getValueAt(jTabledatos.getSelectedRow(), 2).toString().toUpperCase();

        Usuario.TipoUsuario tipo1 = Usuario.TipoUsuario.fromStringSafe(tipoTexto);

        if (tipo == null) {
            JOptionPane.showMessageDialog(this, "Tipo de usuario invalido: " + tipoTexto);
            return;
        }

        p.setTipoUsuario(tipo1);

        UsuarioDAO dao = new UsuarioDAOimpl();
        if (dao.actualizar(p)) {
            JOptionPane.showMessageDialog(this, "Paciente actualizado");
            cargarTabla("");
            LimpiarCampos();
            habilitarCampos(false);
            activiarBotonesEdicion(false);
            
        } else {
            JOptionPane.showMessageDialog(this, "Error al actualizar.");
        }
    }
    
    // Metodo editar paciente
    private void editarPaciente() {
        int fila = jTabledatos.getSelectedRow();
        if (fila >= 0) {
            Usuario u = listaPacientes.get(fila); 

            txtid.setText(String.valueOf(u.getIdUsuario()));
            txtNombrePaciente.setText(u.getNombre());
            txtDireccionPaciente.setText(u.getDireccion());
            txtEmailPaciente.setText(u.getEmail());
            txtTelefonoPaciente.setText(u.getTelefono());


            habilitarCampos(true);
            btnActualizar.setEnabled(true);
            btnCancelar.setEnabled(true);
            btnEditar.setEnabled(false);
            btnEliminar.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una fila para editar.");
        }
    }
    
    // Metodo para cargar la tabla
    private void cargarTabla(String filtro) {
        UsuarioDAO dao = new UsuarioDAOimpl();
        listaUsuario = dao.listarUsuario(filtro);

        listaPacientes.clear();
        
        DefaultTableModel modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        modelo.addColumn("ID");
        modelo.addColumn("Nombre Completo");
        modelo.addColumn("Edad");
        modelo.addColumn("Tipo de Usuario");
        modelo.addColumn("Direccion");
        modelo.addColumn("Email");
        modelo.addColumn("Telefono");

        for (Usuario u : listaUsuario) {
            if (u.getTipoUsuario() == Usuario.TipoUsuario.PACIENTE) {
                
                listaPacientes.add(u);
                
                Object[] fila = {
                    u.getIdUsuario(),
                    u.getNombre(),
                    u.getEdad(),
                    u.getTipoUsuario().name(),
                    u.getDireccion(),
                    u.getEmail(),
                    u.getTelefono()
                };
                modelo.addRow(fila);
            }

        }

        jTabledatos.setModel(modelo);

        try {
            jTabledatos.getColumnModel().getColumn(0).setMinWidth(0);
            jTabledatos.getColumnModel().getColumn(0).setMaxWidth(0);
            jTabledatos.getColumnModel().getColumn(0).setWidth(0);
        } catch (Exception e) {
            System.out.println("Error al ocultar columna ID: " + e.getMessage());
        }

    }

    private void activiarBotonesEdicion(boolean estado) {
        btnEditar.setEnabled(estado);
        btnEliminar.setEnabled(estado);
        btnActualizar.setEnabled(estado);
        btnCancelar.setEnabled(estado);
    }

    private void habilitarCampos(boolean estado) {
        txtNombrePaciente.setEnabled(estado);
        txtDireccionPaciente.setEnabled(estado);
        txtEmailPaciente.setEnabled(estado);
        txtTelefonoPaciente.setEnabled(estado);
        txtid.setEnabled(estado);
    }

    private void LimpiarCampos() {
        txtid.setText("");
        txtNombrePaciente.setText("");
        txtDireccionPaciente.setText("");
        txtEmailPaciente.setText("");
        txtTelefonoPaciente.setText("");
        txtNombrePaciente.requestFocus();
    }

    private void contarPacientes() {
        UsuarioDAO dao = new UsuarioDAOimpl();
        int totalPacientes = dao.contarPacientes();
        txtTotalPacientes.setText(String.valueOf(totalPacientes));
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabledatos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtDireccionPaciente;
    private javax.swing.JTextField txtEmailPaciente;
    private javax.swing.JTextField txtNombrePaciente;
    private javax.swing.JTextField txtTelefonoPaciente;
    private javax.swing.JTextField txtTotalPacientes;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables
}

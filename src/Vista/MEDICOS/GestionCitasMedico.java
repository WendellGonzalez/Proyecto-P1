/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista.MEDICOS;

import DAO.CitaDAO;
import DAOImpl.CitaDAOImpl;
import Model.Cita;
import Model.Medico;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JMenuItem;
import javax.swing.*;
import Vista.LoginORSignIn;

/**
 *
 * @author wendellgonzalez
 */
public class GestionCitasMedico extends javax.swing.JFrame {

    private Medico medicoLogueado;
    CitaDAO citaDAO = new CitaDAOImpl();
    private List<Cita> listaCitasPendientes;

    /**
     * Creates new form GestionCitasMedico
     */
    public GestionCitasMedico(Medico Medico) {
        this.medicoLogueado = Medico;
        initComponents();

        setResizable(false);
        setLocationRelativeTo(null);
        setTitle("NOMBRE DEL MEDICO: " + medicoLogueado.getNombre());

        cargarTablaCitas();

        btnIniciarConsulta.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAceptar = new javax.swing.JButton();
        btnRechazar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMotivoCita = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCitasPendientes = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnIniciarConsulta = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ACTUALIZACION DE ESTADO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 24), new java.awt.Color(0, 102, 102))); // NOI18N
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        btnAceptar.setBackground(new java.awt.Color(0, 51, 51));
        btnAceptar.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnAceptar.setForeground(new java.awt.Color(255, 255, 255));
        btnAceptar.setText("ACEPTAR");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnRechazar.setBackground(new java.awt.Color(0, 51, 51));
        btnRechazar.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnRechazar.setForeground(new java.awt.Color(255, 255, 255));
        btnRechazar.setText("RECHAZAR");
        btnRechazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRechazarActionPerformed(evt);
            }
        });

        txtMotivoCita.setEditable(false);
        txtMotivoCita.setColumns(20);
        txtMotivoCita.setRows(5);
        txtMotivoCita.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MOTIVO DE LA CITA", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 14), new java.awt.Color(0, 102, 102))); // NOI18N
        jScrollPane2.setViewportView(txtMotivoCita);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRechazar, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRechazar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GESTION DE CITAS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        tablaCitasPendientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaCitasPendientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCitasPendientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCitasPendientes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        btnIniciarConsulta.setBackground(new java.awt.Color(0, 51, 51));
        btnIniciarConsulta.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnIniciarConsulta.setForeground(new java.awt.Color(255, 255, 255));
        btnIniciarConsulta.setText("INICIAR CONSULTA");
        btnIniciarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarConsultaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(btnIniciarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(btnIniciarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jMenuBar1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "-", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(204, 204, 204))); // NOI18N

        jMenu1.setText("MENÚ");

        jMenu1.setFont(new java.awt.Font("Helvetica Neue", java.awt.Font.BOLD, 13));

        JMenuItem itemCerrarSesion = new JMenuItem("Cerrar sesión");
        JMenuItem itemVolver = new JMenuItem("Volver al módulo anterior");
        JMenuItem itemSalir = new JMenuItem("Salir del sistema");

        itemCerrarSesion.addActionListener(e -> {
            this.dispose();
            new LoginORSignIn().setVisible(true);
        });

        itemVolver.addActionListener(e -> {
            this.dispose();
            new PanelMedicos(this.medicoLogueado).setVisible(true);
        });

        itemSalir.addActionListener(e -> {
            int resp = JOptionPane.showConfirmDialog(this, "¿Deseas salir del sistema?", "Confirmar Salida", JOptionPane.YES_NO_OPTION);
            if(resp == JOptionPane.YES_OPTION) {
                System.exit(0);
            }
        });

        jMenu1.add(itemCerrarSesion);
        jMenu1.add(itemVolver);
        jMenu1.addSeparator();
        jMenu1.add(itemSalir);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaCitasPendientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCitasPendientesMouseClicked
        // TODO add your handling code here:
        int filaSeleccionada = tablaCitasPendientes.getSelectedRow();
        
        if (filaSeleccionada >= 0) {
            Cita citaSeleccionada = listaCitasPendientes.get(filaSeleccionada);
            txtMotivoCita.setText(citaSeleccionada.getMotivo());
            
            if(citaSeleccionada.getEstado().equals(Cita.Estado.ACEPTADA)) {
                btnIniciarConsulta.setEnabled(true);
                btnAceptar.setEnabled(false);
            } else {
                btnIniciarConsulta.setEnabled(false);
                btnAceptar.setEnabled(true);
            }
            
        }

    }//GEN-LAST:event_tablaCitasPendientesMouseClicked

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:
        aceptarCita();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnRechazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRechazarActionPerformed
        // TODO add your handling code here:
        rechazarCita();
    }//GEN-LAST:event_btnRechazarActionPerformed

    private void btnIniciarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarConsultaActionPerformed
        // TODO add your handling code here:
        iniciarConsulta();
    }//GEN-LAST:event_btnIniciarConsultaActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        
        habilitarBotones(true);
        btnIniciarConsulta.setEnabled(false);
        limpiarCampos();
    }//GEN-LAST:event_jPanel1MouseClicked

    // Metodo para aceptar Citas
    private void aceptarCita() {
        int filaSeleccionada = tablaCitasPendientes.getSelectedRow();
        if (filaSeleccionada >= 0) {
            int idCita = (int) tablaCitasPendientes.getValueAt(filaSeleccionada, 0);

            if (citaDAO.actualizarEstadoCita(idCita, "ACEPTADA")) {
                JOptionPane.showMessageDialog(this, "Cita aceptada exitosamente.");
                btnIniciarConsulta.setEnabled(true);
                DefaultTableModel model = (DefaultTableModel) tablaCitasPendientes.getModel();
                model.setValueAt("ACEPTADA", filaSeleccionada, 5);

                txtMotivoCita.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Error al aceptar la cita.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una cita para aceptar.");
        }
    }
    
    //Metodo para rechazar cita
    private void rechazarCita() {
        int filaSeleccionada = tablaCitasPendientes.getSelectedRow();
        if (filaSeleccionada >= 0) {
            int idCita = (int) tablaCitasPendientes.getValueAt(filaSeleccionada, 0);

            if (citaDAO.actualizarEstadoCita(idCita, "RECHAZADA")) {
                JOptionPane.showMessageDialog(this, "Cita rechazada exitosamente.");
                btnIniciarConsulta.setEnabled(false);
                DefaultTableModel model = (DefaultTableModel) tablaCitasPendientes.getModel();
                model.setValueAt("RECHAZADA", filaSeleccionada, 5);
                txtMotivoCita.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Error al rechazar la cita.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una cita para rechazar.");
        }
    }
    
    //Metodo para iniciar Consulta
    private void iniciarConsulta() {
        int filaSeleccionada = tablaCitasPendientes.getSelectedRow();
        if (filaSeleccionada >= 0) {
            String estadoCita = tablaCitasPendientes.getValueAt(filaSeleccionada, 5).toString();
            if (estadoCita.equals("ACEPTADA")) {
                JOptionPane.showMessageDialog(this, "Iniciamos Consulta.");
                Cita citaSeleccionada = listaCitasPendientes.get(filaSeleccionada);
                new GestionConsultas(citaSeleccionada, this.medicoLogueado).setVisible(true);

                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "No puede iniciar una consulta con una cita que no ha sido aceptada.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una cita para iniciar la consulta.");
        }
    }
    

    //Metodo para cargar tabla con citas
    private void cargarTablaCitas() {

        DefaultTableModel modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        modelo.setColumnIdentifiers(new String[]{"ID", "PACIENTE", "EDAD", "FECHA PARA CITA", "HORA", "ESTADO"});

        listaCitasPendientes = citaDAO.obtenerCitasPendientesPorMedico(this.medicoLogueado.getIdMedico());

        for (Cita cita : listaCitasPendientes) {
            modelo.addRow(new Object[]{
                cita.getIdCita(),
                cita.getPaciente().getNombre(),
                cita.getPaciente().getEdad(),
                cita.getFecha(),
                cita.getHora(),
                cita.getEstado()
            });
        }

        tablaCitasPendientes.setModel(modelo);

        try {

            tablaCitasPendientes.getColumnModel().getColumn(0).setMinWidth(0);
            tablaCitasPendientes.getColumnModel().getColumn(0).setMaxWidth(0);
            tablaCitasPendientes.getColumnModel().getColumn(0).setWidth(0);

        } catch (Exception e) {
            System.err.println("Error al ocultar columna ID: " + e.getMessage());
        }

    }
    
    private void habilitarBotones(boolean estado) {
        btnAceptar.setEnabled(estado);
        btnRechazar.setEnabled(estado);
        btnIniciarConsulta.setEnabled(estado);
    }
    
    private void limpiarCampos() {
        txtMotivoCita.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnIniciarConsulta;
    private javax.swing.JButton btnRechazar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaCitasPendientes;
    private javax.swing.JTextArea txtMotivoCita;
    // End of variables declaration//GEN-END:variables
}
